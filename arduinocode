#include <WiFi.h>
#include <HTTPClient.h>
#include <DHT.h>

#define DHTPIN 19            // Pin where the DHT11 is connected
#define DHTTYPE DHT11        // DHT 11

const char* ssid = "honorazur";            // Your network SSID (name)
const char* password = "featiyou";    // Your network password
const char* serverName = "http://192.168.145.67:5000/weatherstation/reading"; // Server URL

DHT dht(DHTPIN, DHTTYPE);

void setup() {
  Serial.begin(115200);
  dht.begin();
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("WiFi connected.");
  Serial.println("IP Address: ");
  Serial.println(WiFi.localIP());

  // Reading temperature or humidity
  float humidity = dht.readHumidity();
  float tempInCelsius = dht.readTemperature();

  if (isnan(humidity) || isnan(tempInCelsius)) {
    Serial.println("Failed to read from DHT sensor!");
  } else {
    if (WiFi.status() == WL_CONNECTED) {
      HTTPClient http;
      http.begin(serverName);
      http.addHeader("Content-Type", "application/json");

      String httpRequestData = "{\"tempInCelsius\":" + String(tempInCelsius, 1) + ",\"humidity\":" + String(humidity, 1) + "}";
      
      Serial.print("Sending data: ");
      Serial.println(httpRequestData);
      
      int httpResponseCode = http.POST(httpRequestData);

      if (httpResponseCode > 0) {
        String response = http.getString();
        Serial.println("HTTP Response code: " + String(httpResponseCode));
        Serial.println(response);
      }
      else {
        Serial.println("Error on sending POST: " + String(httpResponseCode));
      }
      http.end();
    }
  }

  // Go to deep sleep for 60 seconds
  esp_sleep_enable_timer_wakeup(60 * 1000000);
  esp_deep_sleep_start();
}

void loop() {
  // This is not used as the device is either sending data or in deep sleep.
}
